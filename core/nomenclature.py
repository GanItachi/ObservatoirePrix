repartition_ncoa = {
    # 1. Produits alimentaires et boissons non alcoolis√©es
    'AGRUMES': 1, 'AUTRES_FRUITS_FRAIS': 1, 'AUTRES_MATIERES_GRASSES': 1,
    'AUTRES_PRODUITS_A_BASE_DE_TUBERCULES_ET_DE_PLANTAIN': 1, 'AUTRES_CONSERVES_DE_POISSONS': 1,
    'AUTRES_PRODUITS_FRAIS_DE_MER_OU_DE_FLEUVE': 1, 'BEURRE_MARGARINE': 1, 'BOEUF': 1,
    'CAFE_THE_CACAO_ET_AUTRES_VEGETAUX_POUR_TISANES': 1, 'CEREALES_NON_TRANSFORMEES': 1,
    'CHARCUTERIE_ET_CONSERVES_AUTRES_VIANDES_ET_PREPARATIONS_A_BASE_DE_VIANDE': 1,
    'CONFITURE_MIEL_CHOCOLAT_ET_CONFISERIE': 1, 'FARINES_SEMOULES_ET_GRUAUX': 1,
    'FRUITS_SECS_ET_NOIX': 1, 'HUILES': 1, 'LAIT': 1, 'LAITS_INFANTILES_ET_FARINES_LACTEES_POUR_BEBE': 1,
    'LEGUMES_FRAIS_EN_FEUILLES': 1, 'LEGUMES_FRAIS_EN_FRUITS_OU_RACINE': 1,
    'LEGUMES_SECS_ET_OLEAGINEUX': 1, 'MOUTON_CHEVRE': 1, 'OEUFS': 1, 'PAINS': 1,
    'PATES_ALIMENTAIRES': 1, 'PATISSERIES_GATEAUX_BISCUITS_VIENOISERIES': 1,
    'POISSONS_ET_AUTRES_PRODUITS_SECHES_OU_FUMES': 1, 'POISSONS_FRAIS': 1, 'PORC': 1,
    'PRODUITS_LAITIERS': 1, 'SEL_EPICES_SAUCES_ET_PRODUITS_ALIMENTAIRES_N.D.A': 1,
    'SUCRE': 1, 'TUBERCULES_ET_PLANTAIN': 1, 'VOLAILLE': 1, 'BOISSONS_NON_ALCOOLISEES_ARTISANALES':1,'BOISSONS_NON_ALCOOLISEES_INDUSTRIELLES':1,

    # 2. Boissons alcoolis√©es, tabac et stup√©fiants
    'ALCOOL_DE_BOUCHE': 2, 'BIERE': 2, 'TABAC_ET_STUPEFIANTS': 2, 'VIN_ET_BOISSONS_FERMENTEES': 2,

    # 3. Articles d'habillement et chaussures
    'AUTRES_ARTICLES_VESTIMENTAIRES_ET_ACCESSOIRES_D\'HABILLEMENT': 3,
    'CONFECTION_ET_REPARATIONS_VETEMENTS_ENFANTS': 3,
    'CONFECTION_ET_REPARATIONS_VETEMENTS_FEMMES': 3,
    'CONFECTION_ET_REPARATIONS_VETEMENTS_HOMMES': 3, 'NETTOYAGE_ET_BLANCHISSAGE_DES_VETEMENTS': 3,
    'REPARATION_ET_LOCATION_D\'ARTICLES_CHAUSSANTS': 3, 'SOUS_VETEMENTS_FEMMES': 3,
    'SOUS_VETEMENTS_HOMMES': 3, 'TENUES_SCOLAIRES': 3, 'TISSUS_D\'HABILLEMENT': 3,
    'VETEMENTS_DE_DESSUS_FEMMES': 3, 'VETEMENTS_DE_DESSUS_HOMMES': 3,
    'VETEMENTS_ENFANTS_(3_A_13_ANS)_ET_NOURRISSONS_(0_A_2_ANS)': 3,

    # 4. Logement, eau, gaz, √©lectricit√© et autres combustibles
    'LOYERS_EFFECTIFS_DES_LOCATAIRES_ET_SOUS_LOCATAIRES': 4,
    'COMBUSTIBLES_LIQUIDES': 4, 'COMBUSTIBLES_SOLIDES_ET_AUTRES': 4,
    "SERVICES_POUR_L'HABITATION_SAUF_SERVICES_DOMESTIQUES": 4,

    # 5. Meubles, articles de m√©nage et entretien courant du foyer
    'PRODUITS_POUR_L\'ENTRETIEN_ET_REPARATION_COURANTE': 5,
    'OUTILLAGE_MATERIEL_ET_ACCESSOIRES_DIVERS': 5,

    # 6. Sant√©
    'APPAREILS_ET_MATERIEL_THERAPEUTIQUES': 6, 'MEDICAMENTS_MODERNES': 6,
    'MEDICAMENTS_TRADITIONNELS': 6, 'PRODUITS_MEDICAUX_DIVERS': 6,
    'SERVICES_DES_AUXILIAIRES_MEDICAUX': 6, 'SERVICES_HOSPITALIERS': 6,
    'SERVICES_DE_LABORATOIRES_ET_DE_RADIOLOGIE': 6,
    'SERVICES_MEDICAUX_ET_DENTAIRES': 6, 'SANTE': 6,

    # 7. Transports
    'AUTOMOBILE': 7, 'CARBURANTS_ET_LUBRIFIANTS': 7,
    'ENTRETIEN_ET_REPARATIONS_DE_VEHICULES_PARTICULIERS': 7,
    'ASSURANCE_TRANSPORT': 7, 'CYCLE_MOTOCYCLE_ET_VEHICULE_A_TRACTION_ANIMALE': 7,
    'PIECES_DETACHEES_ET_ACCESSOIRES': 7,
    'TRANSPORT_AERIEN_DE_PASSAGERS': 7, 'TRANSPORT_ROUTIER_DE_PASSAGERS': 7,
    'AUTRES_SERVICES_RELATIFS_AUX_VEHICULES_PERSONNELS': 7,

    # 8. Communication
    'COMMUNICATION_TELEPHONIQUE': 8, 'FRAIS_DE_CONNEXION_INTERNET_ET_ASSIMILES': 8,
    'COMMUNICATION': 8, 'MATERIEL_DE_TELEPHONIE_ET_DE_TELECOPIE': 8,

    # 9. Loisirs et culture
    'APPAREILS_DE_RECEPTION_ENREGISTREMENT_ET_REPRODUCTION': 9,
    'EQUIPEMENT_PHOTOGRAPHIQUE_CINEMATOGRAPHIQUE_OPTIQUE_AUTRE_BIEN_DURABLE_A_FONCTION_RECREATIVE_ET_CULTURELLE': 9,
    'SERVICES_CULTURELS_RECREATIFS_ET_SPORTIFS': 9,
    'JEUX_ET_JOUETS_PASSE_TEMPS_ET_ARTICLES_DE_SPORT_MATERIEL_C': 9,
    'LIVRES_SCOLAIRES_ET_AUTRES_LIVRES': 9,
    'JOURNAUX_ET_PUBLICATIONS_PERIODIQUES': 9,
    'JEUX_DE_HASARD': 9,

    # 10. Enseignement
    'ENSEIGNEMENT_NON_DEFINI_PAR_NIVEAU': 10, 'ENSEIGNEMENT_PRE_ELEMENTAIRE_ET_PRIMAIRE': 10,
    'ENSEIGNEMENT_SECONDAIRE': 10, 'ENSEIGNEMENT_SUPERIEUR': 10,
    'ENSEIGNEMENT_POST_SECONDAIRE_NON_SUPERIEUR': 10,

    # 11. Restaurants et h√¥tels
    'RESTAURANTS_CAFES_ET_ETABLISSEMENTS_SIMILAIRES': 11,
    "HOTELS_ET_AUTRES_SERVICES_D'HEBERGEMENT": 11, 'CANTINES': 11,

    # 12. Biens et services divers
    'APPAREILS_ET_ARTICLES_POUR_SOINS_CORPORELS': 12,
    'PRODUITS_POUR_SOINS_CORPORELS': 12,
    'SALONS_DE_COIFFURE_ET_INSTITUTS_DE_SOINS_ET_DE_BEAUTE': 12,
    'SERVICES_DOMESTIQUES': 12,
    'SERVICES_POSTAUX':12,
    'SERVICES_FINANCIERS': 12,
    "ARTICLES_DE_BIJOUTERIE_ET_D'HORLOGERIE": 12,
    'PAPETERIE_ET_IMPRIMES_DIVERS': 12,
    'PROTECTION_SOCIALE_ET_AUTRES_ASSURANCES': 12,
    'FORFAIT_ET_CIRCUITS_TOURISTIQUES_COMPOSITES': 12,
    'AUTRES_EFFETS_PERSONNELS': 12,
    'PRODUITS_POUR_JARDINS_PLANTES_ET_FLEURS_ANIMAUX_DE_COMPAGNIE_ET_ARTICLES_CONNEXES_ET_AUTRES_SERVICES_POUR_ANIMAUX_DE_COMPAGNIE': 12,
    'SERVICES_D\'ENTRETIEN_ET_DE_REPARATIONS_COURANTES': 12,
    'AUTRES_SERVICES_N.C.A.': 12,
    "MATERIEL_DE_TRAITEMENT_DE_L'INFORMATION_ET_SUPPORTS_D'ENREGISTREMENT_DE_L'IMAGE_ET_DU_SON": 12
}

ncoa_fonction = {
1:"PRODUITS_ALIMENTAIRES_ET_BOISSONS_NON_ALCOOLISEES",
2:"BOISSONS_ALCOOLISEES_TABAC_ET_STUPEFIANTS",
3:"ARTICLES_D_HABILLEMENT_ET_CHAUSSURES",
4:"LOGEMENT_EAU_GAZ_ELECTRICITE_ET_AUTRES_COMBUSTIBLES",
5:"MEUBLES_ARTICLES_DE_MENAGE_ET_ENTRETIEN_COURANT_DU_FOYER",
6:"SANTE",
7:"TRANSPORTS",
8:"COMMUNICATION",
9:"LOISIRS_ET_CULTURE",
10:"ENSEIGNEMENT",
11:"RESTAURANTS_ET_HOTELS",
12:"BIENS_ET_SERVICES_DIVERS"
}

def validate_ncoa(poste_list=None, verbose=True):
    """
    Valide la coh√©rence entre la liste des postes, repartition_ncoa et ncoa_fonction.
    """
    erreurs = []

    # √âtape 1 ‚Äì V√©rifie que chaque poste existe bien dans la classification
    if poste_list is not None:
        for poste in poste_list:
            if poste not in repartition_ncoa:
                erreurs.append(f"‚ùå Poste absent de repartition_ncoa: {poste}")

    # √âtape 2 ‚Äì Reconstruction du mapping inverse : groupe ‚Üí [postes]
    groupe_to_postes = {}
    for poste, groupe in repartition_ncoa.items():
        groupe_to_postes.setdefault(groupe, []).append(poste)

    # √âtape 3 ‚Äì V√©rifie que chaque groupe est bien nomm√© dans ncoa_fonction
    for groupe, postes in groupe_to_postes.items():
        if groupe not in ncoa_fonction:
            erreurs.append(f"‚ùå Groupe {groupe} absent dans ncoa_fonction")
        # On peut ajouter une v√©rification : chaque groupe a au moins un poste ?
        elif not postes:
            erreurs.append(f"‚ö†Ô∏è Groupe {groupe} ({ncoa_fonction[groupe]}) sans poste")

    if verbose:
        if erreurs:
            print("üö® Erreurs de validation NCOA :")
            for err in erreurs:
                print("   ", err)
        else:
            print("‚úÖ NCOA : tous les postes et fonctions sont coh√©rents.")

    return erreurs
